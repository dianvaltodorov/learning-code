Разписани упражнения по Операционни системи за специалност Информатика от Йордан Бабуков.

Операционни системи, упражнение 02

Команди до момента:
pwd, ls, echo, date, man

Вече имате създадени индивидуални акаунти за достъп до сървъра. 
*Сървърът може да бъде достъпен само от учебните зали на ФМИ. От вкъщи няма да успеете.

Да разгледаме процеса на аутентикация пред сървъра:
1) протоколът, по който я осъществяваме е ssh. Това е протокол, който криптира паролата на потребителя по време на осъществяването на аутентикацията. По този начин, ако някой подслушва (sniff) трафика, няма да ви прихване паролата. За самостоятелна работа разгледайте алгоритъма Diffie Hellman за обмяна на ключове за криптиране.
2) портът по подразбиране, на който слуша ssh услугата е 22. Добра практика е портът да бъде сменен.
3) ако сме въвели правилните потребител и парола системата ни допуска до нея. Проверката потребител и парола се осъществява на базата на два файла. /etc/passwd и /etc/shadow.
Aко потребителят, който сме въвели съществува във файл /etc/passwd, то следва проверка на въведената парола, която в общия случай се намира в /etc/shadow, в хеширан вид.
Aко потребителят съществува и паролата съответства на тази на потребителя сме пожънали успех.
*Протокол, който не криптира аутентикацията е telnet.

Нови команди и опции към тях:
who, passwd, write, mesg, cat, more, less, head, tail, touch, rm, mkdir, rmdir, cp, mv, sort, cut, grep

0)
who	-> показва текущо влезлите потребители в система

0.5)
passwd	-> смяна на паролата

0.6) 
write	-> можем да си пишем с логнатите потребители. Това е и причината да не правите контролните на компютър..
write username
txt,txt,txt...
ctrl+c за спиране.

0.7)
Когато вече не ви харесва да ви пишат, може да изпълните команда mesg, с опция n.
mesg n
За активиране отново на чата:
mesg y

1) 
cat	-> conCATanate - обединява съдържание на файлове и ги извежда на стандартния изход (терминала)

Общ вид на командата:
cat f1 f2 f3... fn

Пример:
Нека имаме файл с име 1 и съдържание "a", файл с име 2 и съдържание "b", файл с име 3 и съдържание "c"

[root@dancho os2014]$ cat 1 2 3
a
b
c

2)
head 	-> прочита първите n реда от файл.

Общ вид на командата:
head -n[number] file_name

Пример:
[root@dancho os2014]$ head -n3 my_file.txt
a
b
c

3) 
tail 	-> аналогично на head, но работи за последните n на брой реда.

Пример:
[root@dancho os2014]$ tail -n3 1
d
e
f

4)
touch

Общ вид на командата:
touch f1 f2.. fn
Създава n на брой празни файла. Ако файлът вече съществува, променя времето му на създаване, достъп и промяна.

[root@dancho exersSvetlio]$ touch 1 2 3
[root@dancho exersSvetlio]$ ls -l
total 0
-rw-rw-r--. 1 jrdn jrdn 0 Oct 25 17:53 1
-rw-rw-r--. 1 jrdn jrdn 0 Oct 25 17:53 2
-rw-rw-r--. 1 jrdn jrdn 0 Oct 25 17:53 3

Бонус информация:
Всеки файл има 3 времена, access, modify и change.
Access	-> кога последно е достъпван файлът за четене.
Modify	-> кога последно е променяно съдържанието на файла.
Change	-> кога последно са променяни правата на файла, преименуване, променяно съдържанието на файла.

Можем да ги видим с команда stat:
[root@dancho ~]# stat anaconda-ks.cfg 
  File: ‘anaconda-ks.cfg’
  Size: 1443      	Blocks: 8          IO Block: 4096   regular file
Device: fd02h/64770d	Inode: 269214086   Links: 1
Access: (0600/-rw-------)  Uid: (    0/    root)   Gid: (    0/    root)
Context: system_u:object_r:admin_home_t:s0
Access: 2015-12-17 18:45:22.636133037 +0200
Modify: 2015-12-18 01:13:02.731025144 +0200
Change: 2015-12-18 01:13:02.733025145 +0200
 Birth: -

5)
rm

Общ вид на командата:
rm f1 f2 ... fn
Трие n на брой файла.

[root@dancho exersSvetlio]$ rm 1 2 3
[root@dancho exersSvetlio]$ ls -l
total 0

6) 
mkdir 

Oбщ вид на командата:
mkdir dir1 dir2... dirn
Създава n на брой директории

[root@dancho exersSvetlio]$ mkdir dir1 dir2 dir3
[root@dancho exersSvetlio]$ ls -l
total 12
drwxrwxr-x. 2 jrdn jrdn 4096 Oct 25 17:55 dir1
drwxrwxr-x. 2 jrdn jrdn 4096 Oct 25 17:55 dir2
drwxrwxr-x. 2 jrdn jrdn 4096 Oct 25 17:55 dir3

7)
rmdir 

Oбщ вид на командата:
rmdir dir1 dir2... dirn
Изтрива n на брой дирекории, само ако директорията е празна!

Ако директорията не е празна, може да я трием по следния начин:
rm -r dir1

8)
cp 	-> създава копие на файл(ове)

cp f1 ./dir1/f2 	-> създава копие на файлът f1, намиращ се в текущата директория. Копираният файл е с име f2 и се намира в поддиректория dir1 на текущата ни директория.
Oбщ вид на командата:
cp f1 f2 f3.... fn dir1
Създава копия на файловете f1..fn в директория dir1.

9)
mv 	-> преименува, мести, или преименува и мести файл или директория

Преименуване на файл с име f1 на файл с име f2
mv f1 f2

Преместване на файл:
mv /home/jbabukov/f1 /home/jbabukov/dir1/

Преместване на файл f1, намиращ се в home директорията на потребител jbabukov в поддиректория dir1 и го преименуваме на f2:
mv /home/jbabukov/f1 /home/jbabukov/dir1/f2

Филтри:
Какво е филтър? Филтри се наричат команди, които обработват данни без да променят първоначалните такива. (оригиналът на данните остава същият)

10)
sort
Числово сортиране по трето поле, спрямо разделител ":"
sort -n -t ":" -k3 my_file
Лексикографско сортиране по трето поле, спрямо разделител " "
sort -d -t " " -k3 my_file

11)
cut	-> филтър на ниво колони
Извеждане само на първа и пета колона от файл my_file, спрямо разделител ":"
cut -f1,5 -d ":" my_file
Извеждане на съдържанието от трета до пета колона на файл my_file, спрямо разделител " "
cut -f3-5 -d " " my_file
Извеждане на съдържанието от четвърто поле до края на реда на файл my_file, спрямо разделител " "
cut -f4- -d " " my_file
Извеждане на съдържанието от второ до пето поле и седмо поле на файл my_file, спрямо разделител ":"
cut -f2-5,7 ":" my_file
*f=field=поле
Извеждане на съдържанието от четвърти символ включително до края на реда на файл my_file, спрямо разделител " "
cut -c4- my_file
*c=character=символ
За работен файл (my_file) може да ползвате копие на /etc/passwd

12)
grep	-> филтър на ниво редове

Общ вид на командата:
grep [опции] [шаблон] my_file

Специални символи:
^ 	-> начало на ред
$ 	-> край на ред
Опции
-v 	-> въвежда логическо отрицание в изпълнението на командата
--color -> оцветява намерените думи

Пример:
Изведете всички редове съдържащи низа "Georgi"
grep "Georgi" /etc/passwd
Изведете всички редове, започващи с "Georgi"
grep "^Georgi" /etc/passwd
Изведете всички редове, завършващи с "Georgi"
grep "Georgi$" /etc/passwd
Изведете всички редове, които не започват със низа "Gancho"
grep -v "^Gancho" /etc/passwd